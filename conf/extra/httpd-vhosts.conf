#  Virtual Hosts
#
# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at
# <URL:http://httpd.apache.org/docs/2.2/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

# helpful:
# https://mallinson.ca/osx-web-development/



LogLevel debug
Logformat "%v %h %l %u %t \"%r\" %>s %b" vcommon
ErrorLog /dev/stderr
CustomLog /dev/stdout vcommon

ScriptLog "${HTTPD_DOCUMENT_ROOT}/services/cgi-bin/cgi_log"



<Location "/server-info">
    SetHandler server-info
</Location>

<Location "/server-status">
    SetHandler server-status
</Location>

<Location "/php-info">
    SetHandler server-status
</Location>

# <Location "/news">
#     SetHandler news-handler
#     Action news-handler "/cgi-bin/news.cgi" virtual
# </Location>




# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#

Alias "/php-info" "/info.php"


<Directory ${HTTPD_DOCUMENT_ROOT}>
    Options Includes Indexes MultiViews FollowSymLinks
    AllowOverride All
    Require all granted

    <IfModule mod_headers.c>
        Header set BYOB "%D %t"
        Header set BYOB-GREETING "Hi!"
    </IfModule>
</Directory>


<Directory "${HTTPD_DOCUMENT_ROOT}/clients">
    Options +Indexes
</Directory>


<Directory "${HTTPD_DOCUMENT_ROOT}/services/cgi-bin">
    Options ExecCGI
    SetHandler cgi-script
</Directory>



# #home specific rules
<Virtualhost *:80>
    ####
    ServerName home.lan
    ServerAlias jupiter.lan

    DocumentRoot "${HTTPD_DOCUMENT_ROOT}/clients"

    <IfModule mod_userdir.c>
        UserDir "${HTTPD_DOCUMENT_ROOT}/clients"
    </IfModule>

    <IfModule mod_headers.c>
        Header set HTTP-BYOB "home"
    </IfModule>

</Virtualhost>



# This works -- 2018.04.28
<VirtualHost *:80>
    UseCanonicalName    Off
    ServerName services.lan
    DocumentRoot "${HTTPD_DOCUMENT_ROOT}/services"
    <Directory "${HTTPD_DOCUMENT_ROOT}/services">
        Options +Indexes
    </Directory>


    ScriptAlias /cgi-bin/ "${HTTPD_DOCUMENT_ROOT}/services/cgi-bin"
    <Directory "${HTTPD_DOCUMENT_ROOT}/services/cgi-bin">
        Options +ExecCGI
        AddHandler cgi-script .cgi .py
    </Directory>

</VirtualHost>


# This works -- 2018.04.28
<VirtualHost *:80>
    UseCanonicalName Off
    ServerAlias satisfy.services.lan
    UseCanonicalName Off

    ServerSignature Off
    VirtualDocumentRoot "${HTTPD_DOCUMENT_ROOT}/services/satisfy/web"

<<<<<<< HEAD
=======
    <IfModule mod_ssl.c>
        SSLEngine On
        SSLCertificateFile ${HTTPD_ROOT}/ssl/localhost.crt
        SSLCertificateKeyFile ${HTTPD_ROOT}/ssl/localhost.key

        SetEnv APPLICATION_ENV "secured"
    </IfModule>
>>>>>>> 4196bd2dbdb0260d610bcd78db6167f29ef4aee6
</VirtualHost>



# This works -- 2018.04.28
<VirtualHost *:80>
    UseCanonicalName Off
    ServerAlias *.services.lan
    UseCanonicalName Off

    ServerSignature Off
    VirtualDocumentRoot "${HTTPD_DOCUMENT_ROOT}/services/%1"

<<<<<<< HEAD
=======
    <IfModule mod_ssl.c>
        SSLEngine On
        SSLCertificateFile ${HTTPD_ROOT}/ssl/localhost.crt
        SSLCertificateKeyFile ${HTTPD_ROOT}/ssl/localhost.key

        SetEnv APPLICATION_ENV "secured"
    </IfModule>
>>>>>>> 4196bd2dbdb0260d610bcd78db6167f29ef4aee6
</VirtualHost>




# covers all under /PATH/TO/CLIENTS/<CLIENT_NAME>/<SITE.TLD>/WWWROOT
# eg: www/example.org/wwwroot => www.example.org.local
<Virtualhost *:80 *:443>
    VirtualDocumentRoot "${HTTPD_DOCUMENT_ROOT}/clients/%1/%2.0.%3/wwwroot"
    ServerAlias *.lan
    UseCanonicalName Off

    ServerSignature Off
    SetEnv APPLICATION_ENV "development"
    Header set DevUnsecure "%D %t"

    <IfModule mod_headers.c>
        Header set HTTP-BYOB "client"
    </IfModule>

    <IfModule mod_ssl.c>
        SSLEngine On
        SSLCertificateFile ${HTTPD_ROOT}/ssl/localhost.crt
        SSLCertificateKeyFile ${HTTPD_ROOT}/ssl/localhost.key

        SetEnv APPLICATION_ENV "secured"
    </IfModule>


</Virtualhost>




#looks like DEFAULT should go last
# <VirtualHost _default_:80>
#     DocumentRoot "${HTTPD_DOCUMENT_ROOT}/default"
#     ServerAlias *.lan
#     FallbackResource index.html
#     #    ErrorDocument 404 "Sorry but the requested resource can't be found."
#     <IfModule mod_headers.c>
#         Header set HTTP-BYOB "_default_"
#     </IfModule>
# </VirtualHost>



# LAST?
<VirtualHost *:443>
    Header set DevSecure "%D %t"

    ServerAlias *.lan

    # turn off server signatures
    ServerSignature Off

<<<<<<< HEAD
     <Ifmodule mod_ssl.c>
        SSLEngine On
        SSLCertificateFile ${HTTPD_ROOT}/ssl/localhost.crt
        SSLCertificateKeyFile ${HTTPD_ROOT}/ssl/localhost.key
        SetEnv APPLICATION_ENV "secured"
    </Ifmodule>



    #SSLStrictSNIVHostCheck on

    #    SSLEngine On
    #     # SSLProtocol All -SSLv2 -SSLv3
    #     # SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL

    #     # see generate.bash for details
    #     SSLCertificateFile ${HTTPD_ROOT}/ssl/localhost.crt
    #     SSLCertificateKeyFile ${HTTPD_ROOT}/ssl/localhost.key

    #     SetEnv APPLICATION_ENV "secured"
=======


    <IfModule mod_ssl.c>
        SSLStrictSNIVHostCheck on

        SSLEngine On
        # SSLProtocol All -SSLv2 -SSLv3
        # SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL

        # see generate.bash for details
        SSLCertificateFile ${HTTPD_ROOT}/ssl/localhost.crt
        SSLCertificateKeyFile ${HTTPD_ROOT}/ssl/localhost.key
>>>>>>> 4196bd2dbdb0260d610bcd78db6167f29ef4aee6

        SetEnv APPLICATION_ENV "secured"
    </IfModule>

</VirtualHost>







# #
# # common stuff for virtualhosts
# # <VirtualHost *:80>
# #     # get the server name from the Host: header
# #     UseCanonicalName Off
# #     # this log format can be split per-virtual-host based on the first field


# #     <IfModule mod_php7.c>
# #         php_value date.timezone America/New_York
# #         # hide php version info
# #         php_admin_flag expose_php off
# #         # warn: avoid Opcache to restart with an empty cache
# #         # warn: you absolutely want to avoid Opcache to be full
# #         # warn: it's GOOD to have this separate from production enviro
# #         php_admin_flag opcache.enable on
# #         php_admin_flag opcache.load_comments off
# #         php_admin_value opcache.memory_consumption 128
# #         php_admin_value opcache.max_accelerated_files 3500
# #         php_admin_value opcache.max_wasted_percentage 10
# #         php_admin_value opcache.interned_strings_buffer 16
# #         php_admin_flag opcache.save_comments off
# #         php_admin_flag opcache.load_comments off
# #         php_admin_flag opcache.revalidate_path on
# #         php_admin_flag opcache.revalidate_freq off
# #         # timestamps should be on for dev environment
# #         php_admin_flag opcache.validate_timestamps on
# #         php_admin_flag opcache.enable_file_override on
# #         php_admin_value opcache.max_file_size 2097152
# #         php_admin_flag opcache.fast_shutdown on
# #         # php_admin_flag opcache.blacklist_filename
# #     </IfModule>

# # #    PHPINIDir ${PHP_ROOT}

# # </Virtualhost>
