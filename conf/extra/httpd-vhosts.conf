#  Virtual Hosts
#
# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at
# <URL:http://httpd.apache.org/docs/2.2/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

# helpful:
# https://mallinson.ca/osx-web-development/


LogLevel debug

Logformat "%v %h %l %u %t \"%r\" %>s %b" vcommon


<Location "/server-info">
    SetHandler server-info
</Location>

<Location "/server-status">
    SetHandler server-status
</Location>

<Location "/php-info">
    
</Location>





# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#

Alias "/php-info" "/info.php"
#
ErrorLog /dev/stderr


<Directory ${HTTPD_DOCUMENT_ROOT}>
    Options Includes Indexes MultiViews FollowSymLinks
    AllowOverride All
    Require all granted

    <IfModule mod_headers.c>
        Header set HTTP-BYOB "%D %t"
    </IfModule>
</Directory>




# home specific rules
# <Virtualhost *:80>
#     VirtualDocumentRoot "${HTTPD_DOCUMENT_ROOT}/home"
#     ServerName home.local
#     <IfModule mod_dir.c>
#         FallbackResource fallback.php
#     </Ifmodule>
# </Virtualhost>


# # covers all under ../sites/CLIENT/SITE.TLD/WWWROOT
# # eg: www/example.org/wwwroot => www.example.org.local
# <Virtualhost *:80>
#     VirtualDocumentRoot "${HTTPD_DOCUMENT_ROOT}/clients/%1/%2.0.%3/wwwroot"
#     ServerAlias *.local
#     UseCanonicalName Off

#     ServerSignature Off
#     SetEnv APPLICATION_ENV "development"
#     Header set DevUnsecure "%D %t"

#     CustomLog /dev/stdout vcommon
# </Virtualhost>



# looks like DEFAULT should go last
<VirtualHost _default_:80>
    DocumentRoot "${HTTPD_DOCUMENT_ROOT}/default"
    FallbackResource index.html
#    ErrorDocument 404 "Sorry but the requested resource can't be found."
</VirtualHost>










# # <VirtualHost *:80>
# #     ServerName pma.home.local
# #     DocumentRoot /opt/local/www/phpmyadmin/
# # #    Include ${PHP_ROOT}/config.inc.php
# # </VirtualHost>





# #
# # common stuff for virtualhosts
# # <VirtualHost *:80>
# #     # get the server name from the Host: header
# #     UseCanonicalName Off
# #     # this log format can be split per-virtual-host based on the first field


# #     <IfModule mod_php7.c>
# #         php_value date.timezone America/New_York
# #         # hide php version info
# #         php_admin_flag expose_php off
# #         # warn: avoid Opcache to restart with an empty cache
# #         # warn: you absolutely want to avoid Opcache to be full
# #         # warn: it's GOOD to have this separate from production enviro
# #         php_admin_flag opcache.enable on
# #         php_admin_flag opcache.load_comments off
# #         php_admin_value opcache.memory_consumption 128
# #         php_admin_value opcache.max_accelerated_files 3500
# #         php_admin_value opcache.max_wasted_percentage 10
# #         php_admin_value opcache.interned_strings_buffer 16
# #         php_admin_flag opcache.save_comments off
# #         php_admin_flag opcache.load_comments off
# #         php_admin_flag opcache.revalidate_path on
# #         php_admin_flag opcache.revalidate_freq off
# #         # timestamps should be on for dev environment
# #         php_admin_flag opcache.validate_timestamps on
# #         php_admin_flag opcache.enable_file_override on
# #         php_admin_value opcache.max_file_size 2097152
# #         php_admin_flag opcache.fast_shutdown on
# #         # php_admin_flag opcache.blacklist_filename
# #     </IfModule>

# # #    PHPINIDir ${PHP_ROOT}

# # </Virtualhost>

# # home specific rules
# <Virtualhost *:80>
#     VirtualDocumentRoot ${HTTPD_DOCUMENT_ROOT}/home/wwwroot
#     ServerName home.local
#     <IfModule mod_dir.c>
#         FallbackResource info.php
#     </Ifmodule>

# #    ProxyPassMatch ^/info$ fcgi://127.0.0.1:9000/

# </Virtualhost>







# # <VirtualHost *:443>
# #     Header set DevSecure "%D %t"
# #     # turn off server signatures
# #     ServerSignature Off

# #     SSLEngine On
# #     SSLProtocol All -SSLv2 -SSLv3
# #     SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL

# #     #    https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-apache-in-ubuntu-16-04
# #     SSLCertificateFile ${HTTPD_ROOT}/ssl/apache-selfsigned.crt
# #     SSLCertificateKeyFile ${HTTPD_ROOT}/ssl/apache-selfsigned.key

# #     SetEnv APPLICATION_ENV "development"

# # </VirtualHost>



# # <VirtualHost *:80>

# #     <IfModule mod_dir.c>
# #         FallbackResource /info.php
# #     </Ifmodule>

# # </VirtualHost>